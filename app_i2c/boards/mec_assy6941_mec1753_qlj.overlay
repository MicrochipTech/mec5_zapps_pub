/*
 * Copyright (c) 2025 Microchip Technology Inc.
 * SPDX-License-Identifier: Apache-2.0
 */

#include <zephyr/dt-bindings/gpio/gpio.h>
#include <zephyr/dt-bindings/gpio/microchip-xec-gpio.h>

/*
 * MEC5_ASSY6941 with MEC1753Q-LJ part.
 * JP8 1-2 GPIO055 (BSS_STRAP) pulled-down via 10K to ground selects
 *   Boot-ROM load from eSPI
 * JP7 No jumper
 * JP18 14-15 selects GPIO055 as SHD_nCS0
 * JP45 1-2 connects 1.8V
 * JP62 2-3 and JP68 3-4 VTR2 is powered by 1.8V
 * NOTE: VTR3 is always 1.8V
 *
 * GPIO175/CMP_VOUT1/PWM8_ALT on schematic, LED4 on silkscreen.
 *
 * I2C00_SDA/SCL = GPIO003/004
 * Install Jumper JP15 4-5 to route GPIO004 as I2C00_SCL/UART2_DCD
 * Install Jumper JP15 7-8 to route GPIO003 as I2C00_SDA/UART2_RI
 * Install Jumper JP27 34-35 to select I2C00_SDA
 * Install Jumper JP27 31-32 to select I2C00_SCL
 * Install Jumper JP70 19-20 7.5K pull-up to VTR1 for I2C00_SDA
 * Install Jumper JP70 21-22 7.5K pull-up to VTR1 for I2C00_SCL
 *
 * JP61
 * 1-2 GPIO004 I2C00_SCL to EXTERNAL_SCLK
 * 3-4 GPIO003 I2C00_SDA to EXTERNAL_SDA
 *
 * I2C04_SDA/SCL = GPIO143/144
 * Install Jumper JP20 1-2 to route GPIO144 as I2C04_SCL/UART0_nRTS
 * Install Jumper JP20 4-5 to route GPIO143 as I2C04_SDA/UART0_CTS
 * Install Jumper JP21 13-14 to select I2C04_SCL
 * Install Jumper JP21 25-26 to select I2C04_SDA
 * Install Jumper JP71 25-26 7.5K pull-up to VTR1 for I2C04_SDA
 * Install Jumper JP71 27-28 7.5K pull-up to VTR1 for I2C04_SCL
 *
 * EVB I2C target devices on EXTERNAL_SCLK/SDA bus.
 * U4 is PCA9555 I2C GPIO expander
 * JP52 1-2 use +3.3V_STBY
 * JP61 1-2, 3-4 connect I2C00_SCL and I2C00_SDA to EXTERNAL_SCLK/SDATA
 * JP55 selects I2C address
 * 1-2 = A0, 3-4 = A1, 5-6 = A2 all pull-up by default. Install jumper to ground signals.
 * Installed jumper on JP55 1-2. I2C Address = 0x26
 *
 * U19 is LTC2489 I2C 4-channel delta-sigma ADC
 * Address select pins CA0, CA1 both pulled high. Install jumpers to ground signals.
 * Installed jumpers on JP124 1-2 and 3-4. I2C Address = 0x34
 *
 * Added target device to I2C04 using header J17
 * Attached Fujitsu MB85RC256V I2C FRAM demo board to 6-pin header J17
 * AdaFruit I2C FRAM breakout board.
 * NOTE: removed demo board 1K pulls on SCL and SDA. Using EVB pulls on SCL/SDA.
 * This device allows testing of larger I2C messages and breaking up large transactions
 * into multiple message buffers.
 * FRAM board power -> J17-5 VTR1 (3.3V)
 * FRAM board GND   -> J17-6 GND
 * FRAM board SCL   -> J17-1 I2C00_SCL
 * FRAM board SDA   -> J17-3 I2C00_SDA
 * FRAM address pins A0, A1, A2 are internally pulled-down.
 * I2C Address = 1010_A2_A1_A0 = 0x50 (default)
 *
 * I2C Port 4 is on VTR1. 1x6 header J17
 * 1 = I2C04_SCL
 * 2, 6 = GND
 * 3 = I2C04_SDA
 * 4 = NC
 * 5 = VTR1
 *
 * I2C Port 0 is on VTR1. 1x6 header J12
 * 1 = I2C00_SCL
 * 2, 6 = GND
 * 3 = I2C00_SDA
 * 4 = NC
 * 5 = VTR1
 *
 * Use I2C00 port on I2C00 device as external Controller
 * Use I2C04 port on I2C01 device as target
 * Add wires:
 * J17-1 to J12-1
 * J17-3 to J12-3
 * Disable pull-ups on I2C00 port:
 * Remove jumpers JP70 19-20 and 21-22
 */

/ {
	aliases {
		i2c0 = &i2c_smb_0;
		i2c-0 = &i2c_smb_0;
		i2c1 = &i2c_smb_1;
		i2c-1 = &i2c_smb_1;
		i2c2 = &i2c_smb_2;
		i2c-2 = &i2c_smb_2;
	};

	zephyr,user {
		pinctrl-0 = <&tst_clk_out_gpio060>;
		pinctrl-names = "default";
	};
};

&dmac {
	compatible = "microchip,mec5-dmac";
	status = "okay";
};

/* I2C Port 0 */
/*	drive-strength = "4x"; */
&i2c00_scl_gpio004 {
	drive-open-drain;
	output-enable;
	output-high;
	drive-strength = "4x";
};
&i2c00_sda_gpio003 {
	drive-open-drain;
	output-enable;
	output-high;
	drive-strength = "4x";
};

/* I2C Port 4 */
&i2c04_sda_gpio143 {
	drive-open-drain;
	output-enable;
	output-high;
	drive-strength = "4x";
};
&i2c04_scl_gpio144 {
	drive-open-drain;
	output-enable;
	output-high;
	drive-strength = "4x";
};

/* I2C Port 5 */
&i2c05_sda_gpio141 {
	drive-open-drain;
	output-enable;
	output-high;
	drive-strength = "4x";
};
&i2c05_scl_gpio142 {
	drive-open-drain;
	output-enable;
	output-high;
	drive-strength = "4x";
};

&i2c_smb_0 {
	compatible = "microchip,mec5-i2c";
	status = "okay";
	port_sel = < 0 >;
	sda-gpios = < MCHP_GPIO_DECODE_003 0 >;
	scl-gpios = < MCHP_GPIO_DECODE_004 0 >;
	pinctrl-0 = < &i2c00_sda_gpio003 &i2c00_scl_gpio004 >;
	pinctrl-names = "default";

	pca9555_evb: pca9555@26 {
		/* Zephyr will load NXP PCA9555 driver after MEC5 I2C because it calls MEC5 I2C during init */
		compatible = "nxp,pca9555";
		reg = <0x26>;
		ngpios = <16>;
		gpio-controller;
		#gpio-cells = <2>;
	};

	ltc2489_evb: ltc2489@34 {
		/* No Zephyr driver exists */
		reg = <0x34>;
		#io-channels-cells = <1>;
	};
};

&i2c_smb_1 {
	compatible = "microchip,mec5-i2c";
	status = "okay";
	port_sel = < 4 >;
	sda-gpios = < MCHP_GPIO_DECODE_143 0 >;
	scl-gpios = < MCHP_GPIO_DECODE_144 0 >;
	pinctrl-0 = < &i2c04_sda_gpio143 &i2c04_scl_gpio144 >;
	pinctrl-names = "default";

	/* External Fujitsu MB85RC256V 256KB (32K x 8) FRAM */
	mb85rc256v: mb85rc256v@50 {
		/* No Zephyr driver exists */
		reg = <0x50>;
	};
};

&i2c_smb_2 {
	compatible = "microchip,mec5-i2c-nl";
	interrupts = <22 3>; /* lower priority than default priority of DMA channels */
	port_sel = < 5 >;
	pinctrl-0 = < &i2c05_sda_gpio141 &i2c05_scl_gpio142 >;
	pinctrl-names = "default";
	dmas = <&dmac 4 0x5>, <&dmac 5 0x4>;
	dma-names = "cm", "tm";
	status = "okay";
};

&uart1 {
	current-speed = <115200>;
	status = "okay";
	pinctrl-0 = <&uart1_tx_gpio170 &uart1_rx_gpio171>;
	pinctrl-names = "default";
};

