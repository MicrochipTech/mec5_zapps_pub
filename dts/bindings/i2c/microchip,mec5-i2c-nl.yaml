# Copyright (c) 2025 Microchip Technology Inc.
# SPDX-License-Identifier: Apache-2.0

description: Microchip MEC5 I2C using HW network layer and HAL DMA

compatible: "microchip,mec5-i2c-nl"

include: [i2c-controller.yaml, pinctrl-device.yaml, base.yaml]

properties:
  reg:
    required: true

  pinctrl-0:
    required: true

  pinctrl-names:
    required: true

  port_sel:
    type: int
    description: Port MUX number matching pinctrl-0 pins
    required: true

  scl-gpios:
    type: phandle-array
    description: I2C clock line gpio handle and flags
    required: true

  sda-gpios:
    type: phandle-array
    description: I2C data line gpio handle and flags
    required: true

  dmas:
    required: true
    description: |
      TX and RX DMA specifiers. Each specifier has a phandle reference
      to the DMA channel, the channel number, and a peripheral trigger source.

      Example using DMA channels 2 and 3 for controller/target modes on I2C controller 1.
        dmas = <&dmac 2 0x03>, <&dmac 3 0x2>;

  dma-names:
    required: true
    description:
      Required for the dmas property. The names should be "cm" for controller mode
      and "tm" for target mode.

      Example
        dma-names = "cm", "tm";

  init-pin-wait:
    type: int
    default: 100
    description: |
      Amount of time in microseconds to delay allowing the controller to sample the
      I2C lines during driver initialization. If not present the default is 100 us.

  config-pin-wait:
    type: int
    default: 35000
    description: |
      Amount of time in microseconds to delay allowing the controller to sample the
      I2C lines after controller is configured. This delay is used by the configure
      API and port switch API. If not present the default is 35000 us (SMBus timeout).

  cm-tx-buf-size:
    type: int
    default: 64
    description: |
      Controller mode driver transmit buffer size in bytes.
      I2C network layer hardware uses DMA to transfer data including the target
      address from memory to the hardware. Data flow includes target addresses for
      (RPT)-START and PEC checksum if enabled. The driver uses this buffer to build
      the transmit packet.

  tm-rx-buf-size:
    type: int
    default: 64
    description: |
      Driver buffer for receiving data from an external Controller in target mode.
